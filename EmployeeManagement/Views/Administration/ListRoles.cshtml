@model IEnumerable<IdentityRole>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService authorizationService;
@{
    ViewBag.Title = "All Roles";
}

<h1>All Roles</h1>

@if (Model.Any())
{
    <a class="btn btn-primary mb-3" style="width:auto" asp-action="CreateRole"
       asp-controller="administration">Add new role</a>

    foreach (var role in Model)
    {
        <div class="card mb-3">
            <div class="card-header">
                Role Id : @role.Id
            </div>
            <div class="card-body">
                <h5 class="card-title">@role.Name</h5>
            </div>
            <div class="card-footer">
                @if ((await authorizationService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded)
                {
                    <a asp-controller="Administration" asp-action="EditRole"
                       asp-route-id="@role.Id" class="btn btn-primary">
                        Edit
                    </a>
                }
                @if ((await authorizationService.AuthorizeAsync(User, "DeleteRolePolicy")).Succeeded)
                {
                    <form asp-action="DeleteRole" asp-route-id="@role.Id" method="post">
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete user : @role.Id')" style="width:auto;">Delete</button>
                    </form>
                }

            </div>
        </div>
    }
}
else
{
    <div class="card">
        <div class="card-header">
            No roles created yet
        </div>
        <div class="card-body">
            <h5 class="card-title">
                Use the button below to create a role
            </h5>
            <a class="btn btn-primary" style="width:auto"
               asp-controller="administration" asp-action="CreateRole">
                Create Role
            </a>
        </div>
    </div>
}